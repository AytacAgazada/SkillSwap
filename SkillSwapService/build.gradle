plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'SkillSwapService'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ------------------- Core Dependencies -------------------
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // ------------------- SECURITY -------------------
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // ------------------- Service Discovery -------------------
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // ------------------- Documentation -------------------
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // ------------------- Utility -------------------
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    // Kafka üçün (Asinxron Eventlər)
    implementation 'org.springframework.kafka:spring-kafka'


    // ------------------- TEST -------------------
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.0'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
